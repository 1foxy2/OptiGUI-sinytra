name: Publish Documentation

on:
  push:
    tags: [ '*' ]

jobs:
  generate-kdoc:
    name: Generate Kotlin API documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Fetch release tag
        run: git fetch origin $GITHUB_REF:$GITHUB_REF -f
      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: JDK setup
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
      - name: Prepare Dokka template
        env:
          PROJECT_DIR: ${{ github.workspace }}
          VERSION: ${{ github.ref_name }}
        run: |
          pushd ApidocGenerator
          cp dokka.template.json dokka.json
          sed -i "s:\\\$VERSION:$VERSION:g" dokka.json
          sed -i "s:\\\$PROJECT_DIR:$PROJECT_DIR:g" dokka.json
          sed -i "s:\\\$HOME:$HOME:g" dokka.json
          popd
      - name: Generate documentation
        run: ./gradlew :ApidocGenerator:generateKdoc
      - name: Upload documentation
        uses: actions/upload-artifact@v3
        with:
          name: kdoc
          path: docs/kdoc/${{ github.ref_name }}
  generate-javadoc:
    name: Generate Java API documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Fetch release tag
        run: git fetch origin $GITHUB_REF:$GITHUB_REF -f
      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: JDK setup
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
      - name: Prepare Dokka template
        env:
          PROJECT_DIR: ${{ github.workspace }}
          VERSION: ${{ github.ref_name }}
        run: |
          pushd ApidocGenerator
          cp dokka-java.template.json dokka-java.json
          sed -i "s:\\\$VERSION:$VERSION:g" dokka-java.json
          sed -i "s:\\\$PROJECT_DIR:$PROJECT_DIR:g" dokka-java.json
          sed -i "s:\\\$HOME:$HOME:g" dokka-java.json
          popd
      - name: Generate documentation
        run: ./gradlew :ApidocGenerator:generateJavadoc
      - name: Upload documentation
        uses: actions/upload-artifact@v3
        with:
          name: javadoc
          path: docs/javadoc/${{ github.ref_name }}
  publish-docs:
    name: Publish documentation
    runs-on: ubuntu-latest
    needs:
      - generate-kdoc
      - generate-javadoc
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: docs
          fetch-depth: 1
      - name: Python setup
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install MkDocs
        run: pip install mkdocs mkdocs-material
      - name: Download Kotlin documentation
        uses: actions/download-artifact@v3
        with:
          name: kdoc
          path: docs/kdoc/${{ github.ref_name }}
      - name: Download Java documentation
        uses: actions/download-artifact@v3
        with:
          name: javadoc
          path: docs/javadoc/${{ github.ref_name }}
      - name: Update latest documentation folder (Kotlin)
        env:
          VERSION: ${{ github.ref_name }}
        run: |
          pushd docs/kdoc
          unlink latest
          ln -s $VERSION latest
          popd
      - name: Update latest documentation folder (Java)
        env:
          VERSION: ${{ github.ref_name }}
        run: |
          pushd docs/javadoc
          unlink latest
          ln -s $VERSION latest
          popd
      - name: Build documentation site
        run: mkdocs build
      - name: Deploy documentation
        run: mkdocs gh-deploy
      - name: Delete documentation artifacts
        uses: geekyeggo/delete-artifact@v2
        with:
          name: |
            kdoc
            javadoc
          useGlob: false
          failOnError: false
